{"version":3,"sources":["../src/index.js"],"names":["LEFT","RIGHT","ESC","matches","openPath","path","i","length","stopPropagation","e","getByValue","options","value","comparator","a","b","opt","children","childResult","MultiSelectMenu","props","dark","onChange","selectedOption","label","MultiMenuWrapper","handleHover","setState","state","align","expandDirection","isSubMenu","menu","onSelect","position","width","defaultProps","MultiMenu","basePath","onHover","styles","map","itm","concat","MenuSpacer","MenuItem","handleClick","data","slice","open","hasChildren","MultiMenuTrigger","expanded","fitParent","element","rect","getBoundingClientRect","windowWidth","window","innerWidth","center","left","right","top","bottom","menuWidth","handleSelect","val","handleClickOutside","target","handleClose","handleScroll","preventDefault","handleKeyDown","which","handleBlur","elementRef","el","addEventListener","removeEventListener","className"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react'\nimport classNames from 'classnames'\nimport DocumentEvents from 'react-document-events'\n\nimport { isDescendent } from './dom'\n\nconst LEFT = 'left'\nconst RIGHT = 'right'\nconst ESC = 27\n\nexport const matches = (openPath, path) => {\n  for (let i = 0; i < path.length; i += 1) {\n    if (openPath[i] !== path[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nconst stopPropagation = e => {\n  e.stopPropagation()\n}\n\nconst getByValue = (options, value, comparator=null) => {\n  if (!comparator) { comparator = (a, b) => a === b }\n\n  for (let opt of options) {\n    if (!opt || !value) { continue }\n\n    if (comparator(opt.value, value)) {\n      return opt\n    }\n\n    if (opt.children) {\n      let childResult = getByValue(opt.children, value)\n\n      if (childResult) { return childResult }\n    }\n  }\n}\n\nexport default class MultiSelectMenu extends Component {\n  render() {\n    let { comparator, dark, onChange, options, value } = this.props\n\n    let selectedOption = getByValue(options, value, comparator)\n\n    let label = selectedOption ? selectedOption.label : 'Select...'\n\n    return (\n      <MultiMenuTrigger\n        fitParent\n        className=\"multi-select-menu\"\n        dark={dark}\n        menu={options}\n        onSelect={onChange}\n      >\n        <div className=\"multi-select-menu-selection\">\n          <span className=\"multi-select-menu-value\">\n            {label}\n          </span>\n          <span className=\"multi-select-menu-expand-icon\" />\n        </div>\n      </MultiMenuTrigger>\n    )\n  }\n}\n\nexport class MultiMenuWrapper extends Component {\n  static defaultProps = {\n    expandDirection: RIGHT\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      openPath: [],\n    }\n  }\n\n  handleHover = openPath => {\n    this.setState({ openPath })\n  }\n\n  render() {\n    let {\n      align,\n      expandDirection,\n      isSubMenu,\n      menu,\n      onSelect,\n      position\n    } = this.props\n\n    let { openPath } = this.state\n\n    if (!position) { position = {} }\n\n    return (\n      <div\n        className={classNames(\n          'multi-menu-wrapper',\n          `expand-${expandDirection}`\n        )}\n        style={position}\n      >\n        <MultiMenu\n          {...{ isSubMenu, onSelect }}\n          basePath={[]}\n          menu={menu}\n          openPath={openPath}\n          width={position.width}\n          onHover={this.handleHover}\n        />\n      </div>\n    )\n  }\n}\n\nexport class MultiMenu extends Component {\n  render() {\n    let {\n      basePath,\n      isSubMenu,\n      menu,\n      onHover,\n      onSelect,\n      openPath,\n      width,\n    } = this.props\n\n    let styles = { width }\n\n    return (\n      <div className=\"multi-menu\" style={styles}>\n        {menu.map((itm, i) => (\n          <MenuItem\n            key={i}\n            data={itm}\n            onHover={onHover}\n            onSelect={onSelect}\n            openPath={openPath}\n            path={basePath.concat([i])}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport const MenuSpacer = () => (<div className=\"multi-menu-spacer\" />)\n\nexport class MenuItem extends Component {\n  handleClick = e => {\n    let { data: { value }, onSelect } = this.props\n\n    if (!onSelect) { return }\n\n    onSelect(value)\n  }\n\n  handleHover = e => {\n    let { data, path, onHover } = this.props\n\n    e.stopPropagation()\n\n    if (data && data.children && data.children.length) {\n      onHover(path)\n    } else {\n      onHover(path.slice(0, path.length - 1))\n    }\n  }\n\n  render() {\n    let { data, path, onHover, onSelect, openPath } = this.props\n\n    if (data === null) {\n      return <MenuSpacer />\n    }\n\n    let open = matches(openPath, path)\n    let hasChildren = data.children && data.children.length > 0\n\n    return (\n      <div\n        className={classNames(\n          'multi-menu-item',\n          { open, 'has-children': hasChildren }\n        )}\n        onMouseOver={this.handleHover}\n      >\n        <div\n          className=\"multi-menu-item-label\"\n          onClick={this.handleClick}\n          title={data.label}\n        >\n          {data.label}\n        </div>\n        {open && hasChildren\n          ? <div\n              className=\"multi-menu-child\"\n              onMouseOver={stopPropagation}\n            >\n              <MultiMenu\n                basePath={path}\n                menu={data.children}\n                onHover={onHover}\n                onSelect={onSelect}\n                openPath={openPath}\n              />\n            </div>\n          : null}\n      </div>\n    )\n  }\n}\n\nexport class MultiMenuTrigger extends Component {\n  state = { expanded: false, position: null, expandDirection: null }\n\n  handleClick = e => {\n    if (this.state.expanded) {\n      return this.setState({ expanded: false })\n    }\n\n    let { fitParent } = this.props\n\n    let position = this.state.position\n    let expandDirection = RIGHT\n\n    if (this.element) {\n      let rect = this.element.getBoundingClientRect()\n      let windowWidth = window.innerWidth\n\n      let center = (rect.left + rect.right) / 2\n\n      if (center * 2 > windowWidth) {\n        expandDirection = LEFT\n      }\n\n      position = { top: rect.bottom + 8 }\n      let menuWidth = 180\n\n      if (fitParent) {\n        position = { top: rect.bottom, left: rect.left, width: rect.width }\n      } else if (center - menuWidth / 2 < 20) {\n        position.left = rect.left\n      } else if (center + menuWidth / 2 > windowWidth - 20) {\n        position.left = rect.right - menuWidth\n      } else {\n        position.left = center - menuWidth / 2\n      }\n    }\n\n    this.setState({ position, expandDirection, expanded: true })\n  }\n\n  handleSelect = val => {\n    let { onSelect } = this.props\n\n    this.setState({ expanded: false })\n\n    if (onSelect) {\n      onSelect(val)\n    }\n  }\n\n  handleClickOutside = e => {\n    if (isDescendent(e.target, this.element)) { return }\n\n    this.setState({ expanded: false })\n  }\n\n  handleClose = () => {\n    this.setState({ expanded: false })\n  }\n\n  handleScroll = e => {\n    e.preventDefault()\n  }\n\n  handleKeyDown = e => {\n    if (e.which === ESC) {\n      this.setState({ expanded: false })\n    }\n  }\n\n  handleBlur = () => {\n    this.setState({ expanded: false })\n  }\n\n  elementRef = el => this.element = el\n\n  componentWillMount() {\n    window.addEventListener('blur', this.handleBlur)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('blur', this.handleBlur)\n  }\n\n  render() {\n    let { children, className, dark, menu } = this.props\n    let { expandDirection, expanded, position } = this.state\n\n    return (\n      <div\n        className={classNames(\n          'multi-menu-trigger',\n          className,\n          { expanded, 'multi-menu-dark': dark }\n        )}\n        ref={this.elementRef}\n      >\n        {expanded\n          ? <div\n              className=\"multi-menu-trigger-close\"\n              onMouseDown={this.handleClose}\n            />\n          : null}\n        {expanded\n          ? <DocumentEvents\n              onMouseDown={this.handleClickOutside}\n              onWheel={this.handleScroll}\n              onKeyDown={this.handleKeyDown}\n            />\n          : null}\n        {expanded\n          ? <MultiMenuWrapper\n              expandDirection={expandDirection}\n              menu={menu}\n              onSelect={this.handleSelect}\n              position={position}\n            />\n          : null}\n        <div className=\"multi-menu-trigger-element\" onMouseDown={this.handleClick}>\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n"]}